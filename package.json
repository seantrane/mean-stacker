{
  "name": "mean-stacker",
  "description": "A MEAN Stack Starter Kit",
  "version": "1.0.0",
  "author": "Sean Trane Sciarrone",
  "license": "MIT",
  "homepage": "https://github.com/seantrane/mean-stacker",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/seantrane/mean-stacker.git"
  },
  "bugs": {
    "url": "https://github.com/seantrane/mean-stacker/issues"
  },
  "scripts": {
    "commitmsg": "commitlint -E GIT_PARAMS",
    "build:client-and-server-bundles": "ng build --prod && ng run mean-stacker:server",
    "build:fr": "ng build --configuration=production-fr",
    "build:prod": "ng build --prod",
    "build:serve:ssr": "npm run build:ssr && npm run serve:ssr",
    "build:ssr": "npm run build:client-and-server-bundles && npm run webpack:server",
    "build": "ng build",
    "copyfonts": "mkdir -p src/client/assets/fonts/glyphicons src/client/assets/fonts/fontawesome && cp -af node_modules/bootstrap-sass/assets/fonts/bootstrap/. src/client/assets/fonts/glyphicons/ && cp -af node_modules/font-awesome/fonts/. src/client/assets/fonts/fontawesome/",
    "docker:compose:stop": "docker-compose stop",
    "docker:compose:test": "docker-compose run ${npm_package_name}-local ng test --watch=false",
    "docker:compose:up": "docker-compose up -d --build",
    "docker:build:prod": "npm run docker:remove; docker build -f Dockerfile.prod -t ${npm_package_name}:latest . && docker images",
    "docker:build": "npm run docker:remove; docker build -f Dockerfile.local -t ${npm_package_name}:latest . && docker images",
    "docker:commit": "docker commit -t ${npm_package_name}:latest . && docker images",
    "docker:kill:all": "docker kill $(docker ps -q) < /dev/null 2> /dev/null; docker ps -a",
    "docker:kill": "docker kill ${npm_package_name}-container < /dev/null 2> /dev/null; docker ps -a",
    "docker:other": "npm run docker:rm; docker run --restart=on-failure --env-file ./.env -p 3000:3000 -h ${npm_package_name} --name ${npm_package_name}-container -d -P ${npm_package_name}:latest; echo $?",
    "docker:remove:all": "npm run docker:rm:all; npm run docker:rmi:all",
    "docker:remove": "npm run docker:rm; npm run docker:rmi",
    "docker:rm:all": "npm run docker:kill:all; docker rm -f $(docker ps -a -q) < /dev/null 2> /dev/null; docker ps -a",
    "docker:rm": "npm run docker:kill; docker rm -f ${npm_package_name}-container < /dev/null 2> /dev/null; docker ps",
    "docker:rmi:all": "docker rmi -f $(docker images -a -q) < /dev/null 2> /dev/null; docker images; docker ps -a",
    "docker:rmi": "docker rmi -f ${npm_package_name}:latest < /dev/null 2> /dev/null; docker images; docker ps -a",
    "docker:run": "npm run docker:rm; docker run -it -v ${PWD}:/usr/src/app -v /usr/src/app/node_modules -p 4200:4200 --name ${npm_package_name}-container --rm ${npm_package_name}:latest",
    "docker:start:prod": "npm run docker:build:prod && npm run docker:run",
    "docker:start": "npm run docker:build && npm run docker:run",
    "docker:test": "docker exec -it ${npm_package_name}-container ng test --watch=false",
    "docs": "npm run typedoc -- --options typedoc.json --exclude '**/*.spec.ts' ./src/",
    "e2e": "ng e2e || npm run stop && exit 1",
    "extract": "ng xi18n --output-path=locale",
    "hot": "rm -Rf dist && npm run start",
    "lint:client": "ng lint",
    "lint:md": "markdownlint -i 'node_modules/' -i 'dist/' -c '.markdownlint.yaml' './'",
    "lint:server": "tslint \"src/server/**/*.ts\"",
    "lint:services": "tslint \"src/services/**/*.ts\"",
    "lint:styles": "sass-lint -v -q",
    "lint:utils": "tslint \"src/utils/**/*.ts\"",
    "lint": "npm run lint:md && npm run lint:utils && npm run lint:services && npm run lint:server && npm run lint:client && npm run lint:styles",
    "ng": "ng",
    "semantic-release": "semantic-release",
    "serve:ssr": "node dist/server",
    "start:fr": "ng serve --configuration=fr",
    "start": "ng serve",
    "test:client": "ng test",
    "test:server": "jasmine-ts \"src/server/**/*.spec.ts\"",
    "test:services": "jasmine-ts \"src/services/**/*.spec.ts\"",
    "test:utils": "jasmine-ts \"src/utils/**/*.spec.ts\"",
    "test": "npm run test:utils && npm run test:services && npm run test:server && npm run test:client",
    "webpack:server": "webpack --config webpack.server.config.js --progress --colors"
  },
  "dependencies": {
    "@angular/animations": "^6.0.0",
    "@angular/common": "^6.0.0",
    "@angular/compiler": "^6.0.0",
    "@angular/core": "^6.0.0",
    "@angular/forms": "^6.0.0",
    "@angular/http": "^6.0.0",
    "@angular/platform-browser": "^6.0.0",
    "@angular/platform-browser-dynamic": "^6.0.0",
    "@angular/router": "^6.0.0",
    "@nguniversal/express-engine": "^6.0.0",
    "@nguniversal/module-map-ngfactory-loader": "^6.0.0",
    "@ngx-meta/core": "^6.0.0-rc.1",
    "@ngx-translate/core": "^10.0.1",
    "@ngx-translate/http-loader": "^3.0.1",
    "body-parser": "^1.18.2",
    "compression": "^1.7.2",
    "cookie-parser": "^1.4.3",
    "core-js": "^2.5.4",
    "es6-shim": "^0.35.3",
    "express": "^4.16.3",
    "express-rate-limit": "^3.0.0",
    "helmet": "^3.12.0",
    "jsonwebtoken": "^8.2.1",
    "lodash": "^4.17.10",
    "mock-express-request": "^0.2.2",
    "mock-express-response": "^0.2.2",
    "mongodb": "^3.1.1",
    "mongoose": "~5.2.7",
    "morgan": "^1.9.0",
    "newrelic": "^4.1.0",
    "ngx-bootstrap": "^3.0.0-RC.1",
    "ngx-cookie": "^4.0.2",
    "reflect-metadata": "^0.1.12",
    "request": "^2.85.0",
    "rxjs": "^6.0.0",
    "stshell": "^2.0.0",
    "validator": "^10.2.0",
    "zone.js": "^0.8.26"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.8.0",
    "@angular/cli": "^6.1.2",
    "@angular/compiler-cli": "^6.0.0",
    "@angular/language-service": "^6.0.0",
    "@angular/platform-server": "^6.0.1",
    "@commitlint/cli": "^7.0.0",
    "@commitlint/config-conventional": "^7.0.1",
    "@commitlint/travis-cli": "^7.0.0",
    "@semantic-release/changelog": "^3.0.0",
    "@semantic-release/exec": "^3.0.1",
    "@semantic-release/git": "^7.0.1",
    "@types/body-parser": "^1.17.0",
    "@types/cookie-parser": "^1.4.1",
    "@types/core-js": "^2.5.0",
    "@types/errorhandler": "^0.0.32",
    "@types/express": "^4.11.1",
    "@types/express-serve-static-core": "^4.11.1",
    "@types/helmet": "^0.0.42",
    "@types/jasmine": "~2.8.6",
    "@types/jasminewd2": "~2.0.3",
    "@types/jsonwebtoken": "^7.2.7",
    "@types/lodash": "^4.14.108",
    "@types/mongodb": "^3.0.18",
    "@types/mongoose": "~5.2.4",
    "@types/morgan": "^1.7.35",
    "@types/node": "~10.11.7",
    "@types/request": "^2.47.0",
    "@types/serve-static": "^1.13.2",
    "@types/validator": "^9.4.1",
    "ajv": "^6.5.2",
    "bootstrap-sass": "^3.3.7",
    "codelyzer": "~4.4.3",
    "font-awesome": "^4.7.0",
    "husky": "^1.0.0",
    "jasmine-core": "~3.1.0",
    "jasmine-spec-reporter": "~4.2.1",
    "jasmine-ts": "^0.2.1",
    "karma": "^2.0.5",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage": "^1.1.2",
    "karma-coverage-istanbul-reporter": "~2.0.1",
    "karma-jasmine": "~1.1.1",
    "karma-jasmine-html-reporter": "^1.2.0",
    "karma-remap-coverage": "^0.1.5",
    "markdownlint-cli": "^0.13.0",
    "nyc": "^12.0.2",
    "protractor": "^5.4.0",
    "sass-lint": "^1.12.1",
    "semantic-release": "^15.9.5",
    "source-map-support": "^0.5.6",
    "ts-loader": "^4.4.1",
    "ts-node": "~7.0.0",
    "tslint": "~5.11.0",
    "typescript": "~3.0.1",
    "uglifyjs-webpack-plugin": "^1.2.6",
    "webpack-cli": "^3.0.8"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "release": {
    "verifyConditions": [
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git",
      "@semantic-release/github"
    ],
    "prepare": [
      {
        "path": "@semantic-release/changelog",
        "changelogTitle": "# CHANGELOG"
      },
      "@semantic-release/npm",
      "@semantic-release/git"
    ],
    "publish": [
      {
        "path": "@semantic-release/exec",
        "cmd": "./run --debug --upload --deploy"
      },
      "@semantic-release/github"
    ],
    "success": [
      "@semantic-release/github"
    ],
    "fail": [
      "@semantic-release/github"
    ],
    "npmPublish": false
  }
}
